#ifndef ELEMENT_CU
#define ELEMENT_CU

#include <stdio.h>
#include <fstream>

#include "../Utility/CSVReader.h"
#include "ToSI.h"

class Element
{
public:
   static const int elmNone = 0;
   static const int elmH = 1;
   static const int elmHe = 2;
   static const int elmLi = 3;
   static const int elmBe = 4;
   static const int elmB = 5;
   static const int elmC = 6;
   static const int elmN = 7;
   static const int elmO = 8;
   static const int elmF = 9;
   static const int elmNe = 10;
   static const int elmNa = 11;
   static const int elmMg = 12;
   static const int elmAl = 13;
   static const int elmSi = 14;
   static const int elmP = 15;
   static const int elmS = 16;
   static const int elmCl = 17;
   static const int elmAr = 18;
   static const int elmK = 19;
   static const int elmCa = 20;
   static const int elmSc = 21;
   static const int elmTi = 22;
   static const int elmV = 23;
   static const int elmCr = 24;
   static const int elmMn = 25;
   static const int elmFe = 26;
   static const int elmCo = 27;
   static const int elmNi = 28;
   static const int elmCu = 29;
   static const int elmZn = 30;
   static const int elmGa = 31;
   static const int elmGe = 32;
   static const int elmAs = 33;
   static const int elmSe = 34;
   static const int elmBr = 35;
   static const int elmKr = 36;
   static const int elmRb = 37;
   static const int elmSr = 38;
   static const int elmY = 39;
   static const int elmZr = 40;
   static const int elmNb = 41;
   static const int elmMo = 42;
   static const int elmTc = 43;
   static const int elmRu = 44;
   static const int elmRh = 45;
   static const int elmPd = 46;
   static const int elmAg = 47;
   static const int elmCd = 48;
   static const int elmIn = 49;
   static const int elmSn = 50;
   static const int elmSb = 51;
   static const int elmTe = 52;
   static const int elmI = 53;
   static const int elmXe = 54;
   static const int elmCs = 55;
   static const int elmBa = 56;
   static const int elmLa = 57;
   static const int elmCe = 58;
   static const int elmPr = 59;
   static const int elmNd = 60;
   static const int elmPm = 61;
   static const int elmSm = 62;
   static const int elmEu = 63;
   static const int elmGd = 64;
   static const int elmTb = 65;
   static const int elmDy = 66;
   static const int elmHo = 67;
   static const int elmEr = 68;
   static const int elmTm = 69;
   static const int elmYb = 70;
   static const int elmLu = 71;
   static const int elmHf = 72;
   static const int elmTa = 73;
   static const int elmW = 74;
   static const int elmRe = 75;
   static const int elmOs = 76;
   static const int elmIr = 77;
   static const int elmPt = 78;
   static const int elmAu = 79;
   static const int elmHg = 80;
   static const int elmTl = 81;
   static const int elmPb = 82;
   static const int elmBi = 83;
   static const int elmPo = 84;
   static const int elmAt = 85;
   static const int elmRn = 86;
   static const int elmFr = 87;
   static const int elmRa = 88;
   static const int elmAc = 89;
   static const int elmTh = 90;
   static const int elmPa = 91;
   static const int elmU = 92;
   static const int elmNp = 93;
   static const int elmPu = 94;
   static const int elmAm = 95;
   static const int elmCm = 96;
   static const int elmBk = 97;
   static const int elmCf = 98;
   static const int elmEs = 99;
   static const int elmFm = 100;
   static const int elmMd = 101;
   static const int elmNo = 102;
   static const int elmLr = 103;
   static const int elmRf = 104;
   static const int elmDb = 105;
   static const int elmSg = 106;
   static const int elmBh = 107;
   static const int elmHs = 108;
   static const int elmMt = 109;
   static const int elmUun = 110;
   static const int elmUuu = 111;
   static const int elmUub = 112;
   static const int elmEndOfElements = 113;

   static const Element None;
   static const Element H;
   static const Element He;
   static const Element Li;
   static const Element Be;
   static const Element B;
   static const Element C;
   static const Element N;
   static const Element O;
   static const Element F;
   static const Element Ne;
   static const Element Na;
   static const Element Mg;
   static const Element Al;
   static const Element Si;
   static const Element P;
   static const Element S;
   static const Element Cl;
   static const Element Ar;
   static const Element K;
   static const Element Ca;
   static const Element Sc;
   static const Element Ti;
   static const Element V;
   static const Element Cr;
   static const Element Mn;
   static const Element Fe;
   static const Element Co;
   static const Element Ni;
   static const Element Cu;
   static const Element Zn;
   static const Element Ga;
   static const Element Ge;
   static const Element As;
   static const Element Se;
   static const Element Br;
   static const Element Kr;
   static const Element Rb;
   static const Element Sr;
   static const Element Y;
   static const Element Zr;
   static const Element Nb;
   static const Element Mo;
   static const Element Tc;
   static const Element Ru;
   static const Element Rh;
   static const Element Pd;
   static const Element Ag;
   static const Element Cd;
   static const Element In;
   static const Element Sn;
   static const Element Sb;
   static const Element Te;
   static const Element I;
   static const Element Xe;
   static const Element Cs;
   static const Element Ba;
   static const Element La;
   static const Element Ce;
   static const Element Pr;
   static const Element Nd;
   static const Element Pm;
   static const Element Sm;
   static const Element Eu;
   static const Element Gd;
   static const Element Tb;
   static const Element Dy;
   static const Element Ho;
   static const Element Er;
   static const Element Tm;
   static const Element Yb;
   static const Element Lu;
   static const Element Hf;
   static const Element Ta;
   static const Element W;
   static const Element Re;
   static const Element Os;
   static const Element Ir;
   static const Element Pt;
   static const Element Au;
   static const Element Hg;
   static const Element Tl;
   static const Element Pb;
   static const Element Bi;
   static const Element Po;
   static const Element At;
   static const Element Rn;
   static const Element Fr;
   static const Element Ra;
   static const Element Ac;
   static const Element Th;
   static const Element Pa;
   static const Element U;
   static const Element Np;
   static const Element Pu;
   static const Element Am;
   static const Element Cm;
   static const Element Bk;
   static const Element Cf;
   static const Element Es;
   static const Element Fm;
   static const Element Md;
   static const Element No;
   static const Element Lr;
   static const Element Rf;
   static const Element Db;
   static const Element Sg;
   static const Element Bh;
   static const Element Hs;
   static const Element Mt;
   static const Element Uun;
   static const Element Uuu;
   static const Element Uub;

   Element(int atomicNo);
   Element();

   static int atomicNumberForName(char* name);
   static Element byName(char* name);
   static Element byAtomicNumber(int an);
   static double getAtomicWeight(int atomicNo);
   static Element const * allElements();
   static Element* range(Element min, Element max);
   static double meanIonizationPotential(int atomicNo);
   int getAtomicNumber();
   double getAtomicWeight();
   double getMass();
   char const * toAbbrev();
   static char const * toAbbrev(int atomicNo);
   static char const * toString(int el);
   static bool isValid(int atomicNo);
   bool isValid();
   int compareTo(Element e);
   int hashCode();
   bool equals(Element el);
   char const * toString();
   double getIonizationEnergy();
   static char * const getListOfAbbreviations(Element minEl, Element maxEl);

private:
   static const long long serialVersionUID;
   int mAtomicNumber;

   static const Element mAllElements[elmEndOfElements + 1];
   static char const * const mElementNames[elmEndOfElements + 1];
   static char const * const mAbbreviations[elmEndOfElements + 1];

   static float mIonizationEnergy[104]; // Nominal in Joules, IonizationEnergies.csv
   static float mAtomicWeight[112]; // nominal, in AMU, AtomicWeights.csv

   static void readAtomicWeights();
   Element readResolve();
};

#endif
